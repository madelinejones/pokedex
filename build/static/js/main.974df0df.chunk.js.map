{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Pokemon.js","App.js","serviceWorker.js","index.js"],"names":["Card","_ref","name","type","id","react_default","a","createElement","className","alt","concat","width","height","src","CardList","Pokemon","map","user","i","src_Card","key","SearchBox","searchfield","searchChange","placeholder","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_this2","filteredPokemon","filter","toLowerCase","includes","src_SearchBox","src_CardList","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.974df0df.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, type, id }) => {\n    return (\n        <div className='tc bg-light-red dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt={`${name}`} width='150px' height='150px' src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`}></img>\n            <div>\n                <h2>{name}</h2>\n                <p>{type}</p>\n            </div>\n        </div>\n    );\n}\n\n\n\nexport default Card;","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ Pokemon }) => {\n  return (\n    <div>\n      {Pokemon.map((user, i) => {\n        return (\n          <Card\n            key={Pokemon[i].id}\n            id={Pokemon[i].id}\n            name={Pokemon[i].name}\n            type={Pokemon[i].type}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div>\n      <input\n        className=\"pa3 ba b--green b-lightest-blue\"\n        type=\"search\"\n        placeholder=\"Search Pokémon...\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","export const Pokemon = [\n    {\n        id: 1,\n        name: 'Bulbasaur',\n        type: 'Grass, Poison'\n    },\n    {\n        id: 2,\n        name: 'Ivysaur',\n        type: 'Grass, Poison'\n    },\n    {\n        id: 3,\n        name: 'Venusaur',\n        type: 'Grass, Poison'\n    },\n    {\n        id: 4,\n        name: 'Charmander',\n        type: 'Fire'\n    },\n    {\n        id: 5,\n        name: 'Charmeleon',\n        type: 'Fire'\n    },\n    {\n        id: 6,\n        name: 'Charizad',\n        type: 'Fire, Flying'\n    },\n    {\n        id: 7,\n        name: 'Squirtle',\n        type: 'Water'\n    },\n    {\n        id: 8,\n        name: 'Wartortle',\n        type: 'Water'\n    },\n    {\n        id: 9,\n        name: 'Blastoise',\n        type: 'Water'\n    },\n    {\n        id: 10,\n        name: 'Caterpie',\n        type: 'Bug'\n    },\n    {\n        id: 11,\n        name: 'Metapod',\n        type: 'Bug'\n    },\n    {\n        id: 12,\n        name: 'Butterfree',\n        type: 'Bug, Flying'\n    },\n    {\n        id: 13,\n        name: 'Weedle',\n        type: 'Bug, Poison'\n    },\n    {\n        id: 14,\n        name: 'Kakuna',\n        type: 'Bug, Poison'\n    },\n    {\n        id: 15,\n        name: 'Beedrill',\n        type: 'Bug, Poison'\n    },\n    {\n        id: 16,\n        name: 'Pidgey',\n        type: 'Normal, Flying'\n    },\n    {\n        id: 17,\n        name: 'Pidgeotto',\n        type: 'Normal, Flying'\n    },\n    {\n        id: 18,\n        name: 'Pidgeot',\n        type: 'Normal, Flying'\n    },\n    {\n        id: 19,\n        name: 'Rattata',\n        type: 'Normal'\n    },\n    {\n        id: 20,\n        name: 'Raticate',\n        type: 'Normal'\n    },\n    {\n        id: 21,\n        name: 'Spearow',\n        type: 'Normal, Flying'\n    },\n    {\n        id: 22,\n        name: 'Fearow',\n        type: 'Normal, Flying'\n    },\n    {\n        id: 23,\n        name: 'Ekans',\n        type: 'Poison'\n    },\n    {\n        id: 24,\n        name: 'Arbok',\n        type: 'Poison'\n    },\n    {\n        id: 25,\n        name: 'Pikachu',\n        type: 'Electric'\n    },\n    {\n        id: 26,\n        name: 'Raichu',\n        type: 'Electric'\n    },\n    {\n        id: 27,\n        name: 'Sandshrew',\n        type: 'Ground'\n    },\n    {\n        id: 28,\n        name: 'Sandslash',\n        type: 'Ground'\n    },\n    {\n        id: 29,\n        name: 'Nidoran',\n        type: 'Poison'\n    },\n    {\n        id: 30,\n        name: 'Nidorina',\n        type: 'Poison'\n    },\n    {\n        id: 31,\n        name: 'Nidoqueen',\n        type: 'Poison, Ground'\n    },\n    {\n        id: 32,\n        name: 'Nidoran',\n        type: 'Poison'\n    },\n    {\n        id: 33,\n        name: 'Nidorino',\n        type: 'Poison'\n    },\n    {\n        id: 34,\n        name: 'Nidoking',\n        type: 'Poison, Ground'\n    },\n    {\n        id: 35,\n        name: 'Clefairy',\n        type: 'Fairy'\n    },\n    {\n        id: 36,\n        name: 'Clefable',\n        type: 'Fairy'\n    },\n]","import React, { Component } from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBox from \"./SearchBox\";\nimport { Pokemon } from \"./Pokemon\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Pokemon: Pokemon,\n      searchfield: \"\"\n    };\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchfield: event.target.value });\n  };\n\n  render() {\n    const filteredPokemon = this.state.Pokemon.filter(Pokemon => {\n      return Pokemon.name && Pokemon.type\n        .toLowerCase()\n        .includes(this.state.searchfield.toLowerCase());\n    });\n    return (\n      <div className=\"tc\">\n        <h1>Pokédex</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <CardList Pokemon={filteredPokemon} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}